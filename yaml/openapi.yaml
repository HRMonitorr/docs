openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumentasi API untuk Aplikasi HR Monitor dari Cloud function 
  termsOfService: https://github.com/HRMonitor/docs
  contact:
    email: rofinafiisr@gmail.com
  license:
    name: UsersBackend Package
    url: https://pkg.go.dev/github.com/HRMonitorr/UsersBackend
  version: 1.0.11
externalDocs:
  description: Website kami
  url: https://hrmonitor.advocata.me
servers:
  - url: https://asia-southeast2-gis-project-401902.cloudfunctions.net/
tags:
  - name: Users
    description: Pengelolaan Data User
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://hrmonitor.advocata.me/UsersBackend
  - name: auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://hrmonitor.advocata.me/UsersBackend
  - name: employee
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://hrmonitor.advocata.me/UsersBackend
paths:
  /RegisterUser:
    post:
      tags:
        - Users
      summary: Register User Without Token
      description: Daftar Akun User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
  /loginafterotp:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTP'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /loginotp:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /commit-lifetime:
    post:
      tags:
        - Github API
      summary: getCommit data dari repository
      description: Mengambil Commit Repository
      operationId: commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyReq'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commits'
        '405':
          description: Invalid input

  /GetUserWithToken:
    get:
      tags:
        - Users
      summary: Get Data User Khusus Admin
      description: Header auth for admin only
      operationId: GetdataUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/responseUser'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey
  /updatedataemployee:
    put:
      tags:
        - employee
      summary: Update data User Khusus Admin
      description: Header auth for admin only
      operationId: Updatedataemployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseEmployee'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey
  /InsertDataEmployee:
    post:
      tags:
        - employee
      summary: Insert data Employee Khusus Admin
      description: Header auth for admin only
      operationId: InsertdataEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseEmployee'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /one-employee:
    post:
      tags:
        - employee
      summary: Get Data Employee by employeeid
      description: Header auth for admin only
      operationId: GetOneEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEmployee'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseEmployee'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey


  /get-all-employee:
    get:
      tags:
        - employee
      summary: Get data Employee
      description: Header auth for admin and HR
      operationId: GetDataEmployee
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /deleteuser:
    delete:
      tags:
        - Users
      summary: delete Khusus Admin
      description: Header auth for admin only
      operationId: DeleteUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqUsers'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cred'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey

  /delete-employee:
    delete:
      tags:
        - employee
      summary: delete data employee
      description: Header auth for admin and HR
      operationId: DeleteEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEmployee'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cred'
        '400':
          description: Invalid status value
      security:
        - Login:
          - write:apiKey
          - read:apiKey

components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example : cihuy
        password:
          type: string
          example: cihuypaswort
        phone-num:
          type: string
          example: string
        role:
          type: string
          example: user
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    responseUser:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          type: object
          properties:
            username:
              type: string
              example: cihuy
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: user
    ResponseBack:
          type: object
          properties:
            Status:
              type: integer
              format: int32
            Message:
              type: string
            Data:
              type: array
              items:
                type: string
    User:
          type: object
          properties:
            Username:
              type: string
              description: The username of the user
            Password:
              type: string
              description: The password of the user
            Role:
              type: string
              description: The role of the user

    ResponseEmployee:
      type: object
      properties:
        Status:
          type: integer
          format: int32
        Message:
          type: string
        Data:
          $ref: '#/components/schemas/Employee'
    Cred:
      type: object
      properties:
        Status:
          type: integer
          format: int32
        Message:
          type: string

    RequestEmployee:
      type: object
      properties:
        employeeid:
          type: string

    OTP:
      type: object
      properties:
        otp-code:
          type: string

    Commits:
      type: object
      properties:
        author:
          type: string
          nullable: true
          description: The author of the commit.
        repos:
          type: string
          nullable: true
          description: The repository associated with the commit.
        email:
          type: string
          nullable: true
          description: The email of the commit author.
        comment:
          type: string
          nullable: true
          description: The comment associated with the commit.
        date:
          type: string
          format: date-time
          nullable: true
          description: The date and time of the commit.

    BodyReq:
      type: object
      properties:
        ownerName:
          type: string
          description: The owner's name.
        repoName:
          type: string
          description: The name of the repository.
      required:
        - ownerName
        - repoName
    ReqUsers:
      type: object
      properties:
        Username:
          type: string
    Employee:
      type: object
      properties:
        employeeid:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        division:
          $ref: '#/components/schemas/Division'
        account:
          $ref: '#/components/schemas/User'
        salary:
          $ref: '#/components/schemas/Salary'

    Division:
      type: object
      properties:
        DivId:
          type: integer
          format: int32
        DivName:
          type: string
    
    Salary:
      type: object
      properties:
        basic-salary:
          type: integer
        honor-division:
          type: integer

    Updated:
      type: object
      properties:
        Email:
          type: string
        Phone:
          type: string
    Auth:
      type: object
      properties:
        username:
          type: string
          example: cihuy
        password:
          type: string
          example: cihuypasworthash
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: cihuy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header